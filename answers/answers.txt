/* PART 1: IMPORTING DATA "FINISHED"

/* PART 2: SIMPLE SELECTS AND COUNTS "FINISHED"

/*What are all the types of pokemon that a pokemon can have?
SELECT * FROM types;

/*What is the name of the pokemon with id 45?
SELECT * FROM pokemons WHERE id = 45;

/*How many pokemon are there?
SELECT COUNT(id) FROM pokemons;

/*How many types are there?
SELECT COUNT(id) FROM types;

/*How many pokemon have a secondary type?
SELECT COUNT(id) FROM pokemons WHERE secondary_type IS NOT NULL;

/* PART 3: JOINS AND GROUPS "FINISHED"

/*What is each pokemon's primary type?
SELECT pokemons.name, types.name FROM pokemons JOIN types ON pokemons.primary_type = types.id;

/*What is Rufflet's secondary type?
SELECT pokemons.name, types.name FROM pokemons JOIN types ON pokemons.secondary_type = types.id WHERE pokemons.name = 'Rufflet';

/*What are the names of the pokemon that belong to the trainer with trainerID 303?
SELECT pokemons.name from pokemons join trainers ON pokemons.id = trainers.trainerID WHERE trainerID = 303;

/*How many pokemon have a secondary type Poison?
SELECT pokemons.name, types.name FROM pokemons JOIN types ON pokemons.secondary_type = types.id WHERE types.name = 'Poison';

/*What are all the primary types and how many pokemon have that type?
SELECT COUNT(pokemons.name) AS Pokemon_Count, types.name AS Primary_Types FROM pokemons JOIN types on pokemons.primary_type = types.id group by primary_type;

/*How many pokemon at level 100 does each trainer with at least one level 100 pokemone have? (Hint: your query should not display a trainer
SELECT COUNT(*) AS Level_100_Pokemons_Per_Trainer FROM pokemon_trainer WHERE pokelevel = 100 GROUP by trainerID;

/* How many pokemon only belong to one trainer and no other?
SELECT COUNT(*) AS Number_Of_Pokemons_That_Belong_To_One_Trainer FROM pokemon_trainer WHERE pokemon_id = trainerID  GROUP by trainerID;

/*Sort the data by finding out which trainer has the strongest pokemon so that this will act as a ranking of strongest to weakest trainer. You may interpret strongest in whatever way you want, but you will have to explain your decision.
SELECT pokemons.name AS "Pokemon's name",  trainers.trainername AS "Trainer's name",  pokemon_trainer.pokelevel AS "Current Level", pt.name AS "Primary Type Name", st.name AS "Secondary Type Name"
FROM pokemon_trainer
JOIN trainers ON trainers.trainerID = pokemon_trainer.trainerID
JOIN pokemons ON pokemon_trainer.pokemon_id = pokemons.id
JOIN types AS pt ON pokemons.primary_type = pt.id
JOIN types AS st ON pokemons.secondary_type = st.id
ORDER BY pokemon_trainer.pokelevel DESC limit 50;


SELECT *
FROM trainers
WHERE EXISTS (SELECT * FROM pokemon_trainer WHERE trainerID = pokemon_trainer.trainerID);

SELECT * FROM trainers
WHERE trainerID = (SELECT trainerID FROM pokemon_trainer GROUP BY trainerID
ORDER BY COUNT(*)
DESC LIMIT 1);